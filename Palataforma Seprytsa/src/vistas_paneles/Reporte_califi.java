/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas_paneles;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import tabla.MyScrollbarUI;

/**
 *
 * @author Danilo
 */
public class Reporte_califi extends javax.swing.JPanel {

    /**
     * Creates new form Panel_Home
     */
    public Reporte_califi() {
        initComponents();
        // jLabel6.setBorder(no);

        docente_menu2.getVerticalScrollBar().setUI(new MyScrollbarUI());
        docente_menu2.getHorizontalScrollBar().setUI(new MyScrollbarUI());
        docente_menu.getVerticalScrollBar().setUI(new MyScrollbarUI());
        docente_menu.getHorizontalScrollBar().setUI(new MyScrollbarUI());

        control_botones();
        nofocus();
        vaciar_cajas();
//        txt_codigo.setEnabled(false);
        // cbox_periodo_aca.setEnabled(false);

        ///////// cargo combo periodo
        consultar_periodo_academico(cbox_periodo_aca);

    }

    ////conex
    String direccionBD = "jdbc:mysql://localhost:3307/seprytsa";
    String usuarioBD = "root";
    String contraBD = "";
    // Instanciamos la clase conectar 
    modelo.conectar cone1 = new modelo.conectar();
    // realizamos la conexion
    public Connection cn = cone1.conexion(direccionBD, usuarioBD, contraBD);
    // la conexion se hereda en cn

    int cod_cal = 0;
    int posicion = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txt_identificativo = new javax.swing.JLabel();
        btn_buscar = new rojerusan.RSButtonMetro();
        cbox_buscar = new rojerusan.RSComboMetro();
        txt_buscar = new rojerusan.RSMetroTextPlaceHolder();
        cbox_diplomados = new rojerusan.RSComboMetro();
        btn_refrescar = new rojerusan.RSButtonMetro();
        btn_reportes = new rojerusan.RSButtonMetro();
        cbox_periodo_aca = new rojerusan.RSComboMetro();
        cbox_Horarios = new rojerusan.RSComboMetro();
        docente_menu2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        docente_menu = new javax.swing.JScrollPane();
        Tabla_Reporte_calificaciones = new rojerusan.RSTableMetro();
        btn_refrescar1 = new rojerusan.RSButtonMetro();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(21, 96, 136));

        txt_identificativo.setBackground(new java.awt.Color(255, 255, 255));
        txt_identificativo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txt_identificativo.setForeground(new java.awt.Color(255, 255, 255));
        txt_identificativo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img_menu/calificaciones_52px.png"))); // NOI18N
        txt_identificativo.setText("  Reporte de Calificaciones");

        btn_buscar.setBackground(new java.awt.Color(21, 96, 136));
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img_menu/buscar_52px.png"))); // NOI18N
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        cbox_buscar.setBackground(new java.awt.Color(21, 96, 136));
        cbox_buscar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar Por..", "Código Matrícula", "Código del Estudiante", "Apellido del Estudiante" }));
        cbox_buscar.setActionCommand("comboBoxChanged\nd\nd\nd\nd\nd");
        cbox_buscar.setColorArrow(new java.awt.Color(21, 96, 136));
        cbox_buscar.setColorBorde(new java.awt.Color(21, 96, 136));
        cbox_buscar.setColorFondo(new java.awt.Color(21, 96, 136));
        cbox_buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbox_buscar.setName(""); // NOI18N
        cbox_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_buscarActionPerformed(evt);
            }
        });

        txt_buscar.setForeground(new java.awt.Color(27, 108, 155));
        txt_buscar.setBorderColor(new java.awt.Color(21, 96, 136));
        txt_buscar.setBotonColor(new java.awt.Color(21, 96, 136));
        txt_buscar.setCaretColor(new java.awt.Color(21, 96, 136));
        txt_buscar.setDisabledTextColor(new java.awt.Color(102, 102, 255));
        txt_buscar.setPhColor(new java.awt.Color(27, 108, 155));
        txt_buscar.setPlaceholder("Buscar:");
        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });
        txt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(txt_identificativo, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbox_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_identificativo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbox_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17))))
        );

        cbox_diplomados.setBackground(new java.awt.Color(21, 96, 136));
        cbox_diplomados.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diplomados:" }));
        cbox_diplomados.setActionCommand("comboBoxChanged\nd\nd\nd\nd\nd");
        cbox_diplomados.setColorArrow(new java.awt.Color(21, 96, 136));
        cbox_diplomados.setColorBorde(new java.awt.Color(27, 108, 155));
        cbox_diplomados.setColorFondo(new java.awt.Color(21, 96, 136));
        cbox_diplomados.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbox_diplomados.setName(""); // NOI18N
        cbox_diplomados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_diplomadosActionPerformed(evt);
            }
        });

        btn_refrescar.setBackground(new java.awt.Color(21, 96, 136));
        btn_refrescar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img_alertas/Img_sub_menus/construirx52px.png"))); // NOI18N
        btn_refrescar.setText("refrescar");
        btn_refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refrescarActionPerformed(evt);
            }
        });

        btn_reportes.setBackground(new java.awt.Color(21, 96, 136));
        btn_reportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img_menu/reportes52px.png"))); // NOI18N
        btn_reportes.setText("Reportes");
        btn_reportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reportesActionPerformed(evt);
            }
        });

        cbox_periodo_aca.setBackground(new java.awt.Color(21, 96, 136));
        cbox_periodo_aca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Periodo académico:" }));
        cbox_periodo_aca.setActionCommand("comboBoxChanged\nd\nd\nd\nd\nd");
        cbox_periodo_aca.setColorArrow(new java.awt.Color(21, 96, 136));
        cbox_periodo_aca.setColorBorde(new java.awt.Color(27, 108, 155));
        cbox_periodo_aca.setColorFondo(new java.awt.Color(21, 96, 136));
        cbox_periodo_aca.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbox_periodo_aca.setName(""); // NOI18N
        cbox_periodo_aca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_periodo_acaActionPerformed(evt);
            }
        });

        cbox_Horarios.setBackground(new java.awt.Color(21, 96, 136));
        cbox_Horarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Horarios:" }));
        cbox_Horarios.setActionCommand("comboBoxChanged\nd\nd\nd\nd\nd");
        cbox_Horarios.setColorArrow(new java.awt.Color(21, 96, 136));
        cbox_Horarios.setColorBorde(new java.awt.Color(27, 108, 155));
        cbox_Horarios.setColorFondo(new java.awt.Color(21, 96, 136));
        cbox_Horarios.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbox_Horarios.setName(""); // NOI18N
        cbox_Horarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_HorariosActionPerformed(evt);
            }
        });

        docente_menu2.setBackground(new java.awt.Color(21, 96, 136));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        Tabla_Reporte_calificaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", ""
            }
        ));
        Tabla_Reporte_calificaciones.setColorBackgoundHead(new java.awt.Color(21, 96, 136));
        Tabla_Reporte_calificaciones.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        Tabla_Reporte_calificaciones.setColorBordeHead(new java.awt.Color(21, 96, 136));
        Tabla_Reporte_calificaciones.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        Tabla_Reporte_calificaciones.setColorFilasForeground1(new java.awt.Color(21, 96, 136));
        Tabla_Reporte_calificaciones.setColorFilasForeground2(new java.awt.Color(21, 96, 136));
        Tabla_Reporte_calificaciones.setColorSelBackgound(new java.awt.Color(21, 96, 136));
        Tabla_Reporte_calificaciones.setGridColor(new java.awt.Color(255, 255, 255));
        Tabla_Reporte_calificaciones.setSelectionBackground(new java.awt.Color(21, 96, 136));
        Tabla_Reporte_calificaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla_Reporte_calificacionesMouseClicked(evt);
            }
        });
        docente_menu.setViewportView(Tabla_Reporte_calificaciones);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(docente_menu, javax.swing.GroupLayout.DEFAULT_SIZE, 2744, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(docente_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        docente_menu2.setViewportView(jPanel3);

        btn_refrescar1.setBackground(new java.awt.Color(21, 96, 136));
        btn_refrescar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img_alertas/Img_sub_menus/construirx52px.png"))); // NOI18N
        btn_refrescar1.setText("Generar");
        btn_refrescar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refrescar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cbox_periodo_aca, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbox_Horarios, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbox_diplomados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_refrescar1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btn_refrescar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_reportes, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(docente_menu2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_reportes, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(cbox_diplomados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbox_Horarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox_periodo_aca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_refrescar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_refrescar1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(docente_menu2, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        cbox_diplomados.getAccessibleContext().setAccessibleName("");
        cbox_diplomados.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbox_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_buscarActionPerformed
        // TODO add your handling code here:
        String Campo = cbox_buscar.getSelectedItem().toString();
        switch (Campo) {
//Buscar Por.., Código, Nombre, Apellido
            case "Buscar Por..":

                txt_buscar.setEnabled(false);
                //consutarTabla_Docentes();
                btn_True_false();
                vaciar_cajas();
                break;
            case "Código Matrícula":
                txt_buscar.setEnabled(true);

                break;
            case "Código del Estudiante":
                txt_buscar.setEnabled(true);

                break;
            case "Apellido del Estudiante":
                txt_buscar.setEnabled(true);

                break;
        }


    }//GEN-LAST:event_cbox_buscarActionPerformed

    private void btn_refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refrescarActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btn_refrescarActionPerformed

    private void btn_reportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reportesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_reportesActionPerformed

    private void txt_buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyReleased
        // TODO add your handling code here:
        try {
            String Campo = cbox_buscar.getSelectedItem().toString();
            String txtSql = txt_buscar.getText().toString();
            String pa = separar(cbox_periodo_aca.getSelectedItem().toString());
            String hor = separar(cbox_Horarios.getSelectedItem().toString());
            String dip = separar(cbox_diplomados.getSelectedItem().toString());
            String resultado = separar2(txt_identificativo.getText().toString());

            String Campo2 = null;

            int indicador = 0;
            if (txt_identificativo.getText().toString() == "Calificaciones/Primer Producto") {
                //JOptionPane.showMessageDialog(null,"Es el primer producto");
                indicador = 1;
            }
            if (txt_identificativo.getText().toString() == "Calificaciones/Segundo Producto") {
                //JOptionPane.showMessageDialog(null,"Es el primer producto");
                indicador = 2;
            }
            if (txt_identificativo.getText().toString() == "Calificaciones/Tercer Producto") {
                //JOptionPane.showMessageDialog(null,"Es el primer producto");
                indicador = 3;
            }
            if (txt_identificativo.getText().toString() == "Calificaciones/Cuarto Producto") {
                //JOptionPane.showMessageDialog(null,"Es el primer producto");
                indicador = 4;
            }

            switch (Campo) {
//Buscar Por.., Código, Nombre, Apellido
                case "Buscar Por..":

                    break;
                case "Código Matrícula":

                    Campo2 = "matricula.cod_mat";

                    // JOptionPane.showMessageDialog(null, resultado);
                    consutaBD(indicador, pa, hor, dip, Campo2, txtSql);

                    break;
                case "Código del Estudiante":
//JOptionPane.showMessageDialog(docente_menu, "ESTOY EN ESTUDIANTE");
                    Campo2 = "estudiante.cod_est";
                    consutaBD(indicador, pa, hor, dip, Campo2, txtSql);

                    break;
                case "Apellido del Estudiante":

                    Campo2 = "estudiante.Apellido_est";
                    consutaBD(indicador, pa, hor, dip, Campo2, txtSql);
                    break;
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_txt_buscarKeyReleased

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
        String Campo = cbox_buscar.getSelectedItem().toString();
        String Campo2 = null;
        String txtSql = txt_buscar.getText().toString();
        switch (Campo) {
//Buscar Por.., Código, Nombre, Apellido
            case "Buscar Por..":

                txt_buscar.setEnabled(false);
                // consutarTabla_Docentes();
                btn_True_false();
                vaciar_cajas();

                break;
            case "Código":
                Campo2 = "cod_doc";
                consutaBD_sinfiltros(Campo2, txtSql);

                txt_buscar.setEnabled(true);

                break;
            case "Nombre":

                Campo2 = "Nombre_doc";
                consutaBD_sinfiltros(Campo2, txtSql);

                txt_buscar.setEnabled(true);

                break;
            case "Apellido":

                Campo2 = "Apellido_doc";
                consutaBD_sinfiltros(Campo2, txtSql);

                txt_buscar.setEnabled(true);

                break;
        }
    }//GEN-LAST:event_btn_buscarActionPerformed
    public String separar(String cadena) {
        String valor = cadena;
        String valor2 = "";

        String[] parts = valor.split("/");
        valor2 = parts[0];

        return valor2;
    }

    public String separar2(String cadena) {
        String valor = cadena;
        String valor2 = "";

        String[] parts = valor.split("/");
        valor2 = parts[1];

        return valor2;
    }
    private void Tabla_Reporte_calificacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla_Reporte_calificacionesMouseClicked
//        // TODO add your handling code here:
//
//        //    JOptionPane.showMessageDialog(docente_menu, evt);
//        int fila = Tabla_Reporte_calificaciones.getSelectedRow();
//
//        if (fila > -1) {
//            posicion = fila;
//            //  Txt_Codigo.setText(Integer.toString(fila));
////                txt_codigo.setText(Tabla_calificaciones.getValueAt(fila, 0).toString());
////                txt_nombre.setText(Tabla_calificaciones.getValueAt(fila, 3).toString());
////                txt_apellido.setText(Tabla_calificaciones.getValueAt(fila, 2).toString());
//            cod_cal = Integer.parseInt(Tabla_Reporte_calificaciones.getValueAt(fila, 4).toString());
////                 txt_calificacion.setText(Tabla_calificaciones.getValueAt(fila, 5).toString());
////                txt_N_faltas.setText(Tabla_calificaciones.getValueAt(fila, 6).toString());
//        }
//
////        txt_calificacion.setEnabled(true);
////        txt_N_faltas.setEnabled(true);
////        btn_guardar.setEnabled(true);
//        //btn_siguiente.setEnabled(true);

    }//GEN-LAST:event_Tabla_Reporte_calificacionesMouseClicked

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarActionPerformed

    private void cbox_diplomadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_diplomadosActionPerformed
        // TODO add your handling code here:

//        try {
//            String comparacion1 = cbox_diplomados.getSelectedItem().toString();
//        
//             
//            
//            if (!(comparacion1 == "Diplomados:") && !(comparacion1 == "")) {
//
//                String comparacion = txt_identificativo.getText().toString();
//
//                
//                    String pa = separar(cbox_periodo_aca.getSelectedItem().toString());
//                    String hor = separar(cbox_Horarios.getSelectedItem().toString());
//                    String dip = separar(cbox_diplomados.getSelectedItem().toString());
//                    
//                     JOptionPane.showMessageDialog(null, pa+ hor+ dip);
//                    reporte_cali( pa, hor, dip);
//                   
//                    
//                    cbox_diplomados.setEnabled(false);
//                    cbox_Horarios.setEnabled(false);
//                    Tabla_Reporte_calificaciones.setEnabled(true);
//                    cbox_periodo_aca.setEnabled(false);
////                    btn_nuevo.setEnabled(true);
//                    btn_refrescar.setEnabled(true);
//                    btn_reportes.setEnabled(true);
//
//                
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }

    }//GEN-LAST:event_cbox_diplomadosActionPerformed

    private void cbox_HorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_HorariosActionPerformed
        // TODO add your handling code here:
        String comparacion = cbox_Horarios.getSelectedItem().toString();
        if (!(comparacion == "Horarios:") && !(comparacion == "")) {

            String periodo = separar(cbox_periodo_aca.getSelectedItem().toString());
            String horario = separar(cbox_Horarios.getSelectedItem().toString());
            //         JOptionPane.showMessageDialog(null, periodo);

            consultar_Diplomados(periodo, horario);
            cbox_diplomados.setEnabled(true);

        }

    }//GEN-LAST:event_cbox_HorariosActionPerformed

    private void cbox_periodo_acaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_periodo_acaActionPerformed
        // TODO add your handling code here:
        try {

            String comparacion = cbox_periodo_aca.getSelectedItem().toString();
            if (!(comparacion == "Periodo académico:") && !(comparacion == "")) {
                //   cbox_horarios.removeAllItems();
                //        cbox_horarios.addItem("Horarios:");
                String Captura = cbox_periodo_aca.getSelectedItem().toString();

                String[] parts = Captura.split("/");
                String Captura2 = parts[0];
                // JOptionPane.showMessageDialog(null,cbox_periodo_aca.getSelectedItem().toString());

                consultar_Horarios(Captura2);
                cbox_Horarios.setEnabled(true);
            }
        } catch (Exception e) {
            e.getMessage();
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_cbox_periodo_acaActionPerformed

    private void btn_refrescar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refrescar1ActionPerformed
        // TODO add your handling code here:
        try {
            String comparacion1 = cbox_diplomados.getSelectedItem().toString();

            if (!(comparacion1 == "Diplomados:") && !(comparacion1 == "")) {

                String comparacion = txt_identificativo.getText().toString();

                String pa = separar(cbox_periodo_aca.getSelectedItem().toString());
                String hor = separar(cbox_Horarios.getSelectedItem().toString());
                String dip = separar(cbox_diplomados.getSelectedItem().toString());

            //   JOptionPane.showMessageDialog(null, pa + hor + dip);
               
                //reporte_cali(pa, hor, dip);
                calcular_reporte(pa, hor, dip);
                 reporte_cali(pa, hor, dip);
                cbox_diplomados.setEnabled(false);
                cbox_Horarios.setEnabled(false);
                Tabla_Reporte_calificaciones.setEnabled(true);
                cbox_periodo_aca.setEnabled(false);
//                    btn_nuevo.setEnabled(true);
                btn_refrescar.setEnabled(true);
                btn_reportes.setEnabled(true);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_refrescar1ActionPerformed

    public void consutaBD(int pos, String pa, String hor, String dip, String Campo, String txtSQL) {

        try {
            String consultaBD = "SELECT matricula.cod_mat, estudiante.cod_est,estudiante.Apellido_est,estudiante.Nombre_est,calificacion_1.cod_cal_1,calificacion_1.valor_cal,calificacion_1.faltas FROM horarios, diplomados,matricula,periodo_academico,estudiante,calificacion_1\n"
                    + "WHERE periodo_academico.cod_pa='" + pa + "' \n"
                    + "AND horarios.cod_hor=" + hor + "\n"
                    + "AND diplomados.cod_dip='" + dip + "' \n"
                    + "AND periodo_academico.cod_pa=matricula.cod_pa \n"
                    + "AND horarios.cod_hor=matricula.cod_hor \n"
                    + "AND diplomados.cod_dip=matricula.cod_dip \n"
                    + "AND estudiante.cod_est=matricula.cod_est \n"
                    + "AND matricula.cod_mat=calificacion_1.cod_mat\n"
                    + " AND " + Campo + " LIKE '" + txtSQL + "_%'"
                    + " ORDER BY estudiante.Apellido_est ";
            //  JOptionPane.showMessageDialog(null, consultaBD);
            javax.swing.JTable Tabla = this.Tabla_Reporte_calificaciones;
            // Enviamos los parametros para la consulta de la tabla
            //  conexion    consulta de la base de datos y el nombre de la tabla
            String cabesera[] = {"Matrícula", "Código del estudiante", "Apellido ", "Nombre", "Código", "Nota", "Faltas"};
            cone1.GetTabla_Sincabeseras_sql_bd(cn, consultaBD, Tabla, cabesera);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void consutaBD_sinfiltros(String Campo, String txtSQL) {

        String consultaBD = "SELECT * FROM `docente` WHERE " + Campo + "='" + txtSQL + "'";
        // String consultaBD = "SELECT * FROM `docente` WHERE " + Campo + " LIKE '" + txtSQL + "_%'";
        //JOptionPane.showMessageDialog(null, consultaBD);
        javax.swing.JTable Tabla = this.Tabla_Reporte_calificaciones;
        // Enviamos los parametros para la consulta de la tabla
        //  conexion    consulta de la base de datos y el nombre de la tabla
        String cabesera[] = {"Código", "Nombres", "Apellidos", "Dirección", "Teléfono", "Fecha de Naciemiento", "Nacionalidad"
        };
        cone1.GetTabla_Sincabeseras_sql_bd(cn, consultaBD, Tabla, cabesera);

    }

    public void control_botones() {
//         btn_siguiente.setEnabled(false);
//        btn_guardar.setEnabled(false);
//        btn_nuevo.setEnabled(true);
        //   btn_actualizar.setEnabled(false);
        // btn_eliminar.setEnabled(false);
        btn_reportes.setEnabled(true);
        btn_refrescar.setEnabled(true);
    }

    public void alerta(String titulo, String texto, String dir_img) {

        Alertas wa = new Alertas(null, true);
        wa.txt_titu.setText(titulo);
        wa.txt_txt.setText(texto);

        wa.txt_img.setIcon(new javax.swing.ImageIcon(getClass().getResource(dir_img)));

        wa.setVisible(true);
    }

    public int confirmar(String titulo, String texto, String dir_img) {

        int estatus = 9;
        Alertas wa = new Alertas(null, true);
        wa.txt_titu.setText(titulo);
        wa.txt_txt.setText(texto);

        wa.txt_img.setIcon(new javax.swing.ImageIcon(getClass().getResource(dir_img)));

        wa.setVisible(true);

        estatus = wa.respuesta;

        return estatus;
    }

    private void nofocus() {

        btn_reportes.setFocusPainted(false);
        btn_refrescar.setFocusPainted(false);

    }

    private void vaciar_cajas() {

        cbox_diplomados.setEnabled(false);
        txt_buscar.setEnabled(false);
        cbox_Horarios.setEnabled(false);

        btn_refrescar.setEnabled(false);
        btn_reportes.setEnabled(false);
        btn_refrescar.setEnabled(false);

    }

    private void btn_True_false() {
        btn_reportes.setEnabled(false);
        btn_refrescar.setEnabled(false);
        Tabla_Reporte_calificaciones.setEnabled(false);

    }

    public void consultar_periodo_academico(rojerusan.RSComboMetro per_aca) {

        try {
//            cbox_periodo_aca.removeAllItems();
//            cbox_periodo_aca.addItem("Periodo Académico:");
            Statement estado;
            String Nombre_per_aca = "";
            String codigo = "";

/// hacemos consulata sql
            estado = cn.createStatement();
            ResultSet resultado = estado.executeQuery("SELECT *FROM `periodo_academico`");

            while (resultado.next()) {
                codigo = resultado.getString(1);
                Nombre_per_aca = resultado.getString(4);
                per_aca.addItem(codigo + "/" + Nombre_per_aca);

            }

        } catch (SQLException ex) {
            Logger.getLogger(Reporte_califi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void limpiar_combo(rojerusan.RSComboMetro combo) {
        for (int i = combo.getItemCount() - 1; i > 0; i--) {
            combo.removeItemAt(i);
        }
    }

    public void consultar_Horarios(String seleccion) {
        try {
            String sql_consulta = "SELECT horarios.cod_hor, horarios.rango_dias_hor,horarios.Horario_hor FROM horarios,matricula,periodo_academico "
                    + "WHERE periodo_academico.cod_pa='" + seleccion + "' AND matricula.cod_hor=horarios.cod_hor AND periodo_academico.cod_pa=matricula.cod_pa ";

            Statement estado;
            String codigo = "";
            String dias = "";
            String horas = "";

            estado = cn.createStatement();
            ResultSet resultado = estado.executeQuery(sql_consulta);
            //  cbox_horarios.removeAllItems();
            limpiar_combo(cbox_Horarios);

            while (resultado.next()) {
                codigo = resultado.getString(1);
                dias = resultado.getString(2);
                horas = resultado.getString(3);
                cbox_Horarios.addItem(codigo + "/" + dias + "/" + horas);

            }
        } catch (SQLException ex) {
            Logger.getLogger(Reporte_califi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void consultar_Diplomados(String seleccion_pa, String seleccion_ho) {
        try {
            String sql_consulta = "select diplomados.cod_dip,diplomados.nombre_dip FROM horarios,matricula,periodo_academico,diplomados\n"
                    + " WHERE periodo_academico.cod_pa='" + seleccion_pa + "' "
                    + "AND horarios.cod_hor='" + seleccion_ho + "' "
                    + "AND horarios.cod_hor= matricula.cod_hor "
                    + "AND diplomados.cod_dip=matricula.cod_dip "
                    + "AND periodo_academico.cod_pa=matricula.cod_pa ";

            Statement estado;
            String codigo = "";
            String nombre = "";

            estado = cn.createStatement();
            ResultSet resultado = estado.executeQuery(sql_consulta);
            limpiar_combo(cbox_diplomados);

            while (resultado.next()) {
                codigo = codigo = resultado.getString(1);
                nombre = resultado.getString(2);

                cbox_diplomados.addItem(codigo + "/" + nombre);

            }
        } catch (SQLException ex) {
            Logger.getLogger(Reporte_califi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void reporte_cali(String pa, String hor, String dip) {

        try {
            String consultaBD = "SELECT matricula.cod_mat, estudiante.cod_est,estudiante.Apellido_est,estudiante.Nombre_est,\n" +
" calificacion_1.valor_cal,\n" +
" ponderados.valor_nota1,\n" +
" calificacion_1.faltas,\n" +
" calificacion_2.valor_cal,\n" +
" ponderados.valor_nota2,\n" +
" calificacion_2.faltas,\n" +
" calificacion_3.valor_cal,\n" +
" ponderados.valor_nota3,\n" +
" calificacion_3.faltas,\n" +
" calificacion_4.valor_cal,\n" +
" ponderados.valor_nota4,\n" +
" calificacion_4.faltas,\n" +
" ponderados.Suma_notas,\n" +
" ponderados.Total_Faltas,\n" +
" ponderados.equivalencia\n" +
" FROM horarios, diplomados,matricula,\n" +
" periodo_academico,\n" +
" estudiante,\n" +
" calificacion_1,\n" +
" calificacion_2,\n" +
" calificacion_3,\n" +
" calificacion_4,\n" +
" ponderados\n" +
" WHERE periodo_academico.cod_pa='"+pa+"' \n" +
" AND horarios.cod_hor="+hor+" \n" +
" AND diplomados.cod_dip='"+dip+"' \n" +
" AND periodo_academico.cod_pa=matricula.cod_pa \n" +
" AND horarios.cod_hor=matricula.cod_hor \n" +
" AND diplomados.cod_dip=matricula.cod_dip \n" +
" AND estudiante.cod_est=matricula.cod_est \n" +
" AND matricula.cod_mat=calificacion_1.cod_mat\n" +
" AND matricula.cod_mat=calificacion_2.cod_mat\n" +
" AND matricula.cod_mat=calificacion_3.cod_mat\n" +
" AND matricula.cod_mat=calificacion_4.cod_mat\n" +
" AND matricula.cod_mat=ponderados.cod_mat\n" +
" ORDER BY estudiante.Apellido_est";
          //  JOptionPane.showMessageDialog(null, consultaBD);
            javax.swing.JTable Tabla = this.Tabla_Reporte_calificaciones;
            // Enviamos los parametros para la consulta de la tabla
            //  conexion    consulta de la base de datos y el nombre de la tabla
            String cabesera[] = {"MATRÍCULA", "COD.ESTUDIANTE", "APELLIDOS", "NOMBRES", "NOTA 1","PR.PRO", "PR.PRO.FALTAS", "NOTA 2", "SEG.PRO","SEG.PRO.FALTAS", "NOTA 3", "TER.PRO","TER.PRO.FALTAS", "NOTA 4", "CUA.PRO","CUA.PRO.FALTAS","CAL.FINAL","TOT.FALTAS","EQUIVALENCIA"};
            cone1.GetTabla_Sincabeseras_sql_bd(cn, consultaBD, Tabla, cabesera);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void actualizar() {

        String pa = separar(cbox_periodo_aca.getSelectedItem().toString());
        String hor = separar(cbox_Horarios.getSelectedItem().toString());
        String dip = separar(cbox_diplomados.getSelectedItem().toString());
        String resultado = separar2(txt_identificativo.getText().toString());
        // JOptionPane.showMessageDialog(null, resultado);
        reporte_cali(pa, hor, dip);
        cbox_diplomados.setEnabled(false);
        cbox_Horarios.setEnabled(false);
//                     btn_True_false();
//                     vaciar_cajas();  

    }

    public void calcular_reporte(String pa, String hor, String dip) {
        try {
            Statement estado;

            String consultaBD = "SELECT matricula.cod_mat,\n"
                    + " calificacion_1.valor_cal,\n"
                    + " calificacion_1.faltas,\n"
                    + " calificacion_2.valor_cal,\n"
                    + " calificacion_2.faltas,\n"
                    + " calificacion_3.valor_cal,\n"
                    + " calificacion_3.faltas,\n"
                    + " calificacion_4.valor_cal,\n"
                    + " calificacion_4.faltas\n"
                    + " FROM horarios, diplomados,matricula,\n"
                    + " periodo_academico,\n"
                    + " estudiante,\n"
                    + " calificacion_1,\n"
                    + " calificacion_2,\n"
                    + " calificacion_3,\n"
                    + " calificacion_4\n"
                    + " WHERE periodo_academico.cod_pa='" + pa + "' \n"
                    + " AND horarios.cod_hor=" + hor + " \n"
                    + " AND diplomados.cod_dip='" + dip + "' \n"
                    + " AND periodo_academico.cod_pa=matricula.cod_pa \n"
                    + " AND horarios.cod_hor=matricula.cod_hor \n"
                    + " AND diplomados.cod_dip=matricula.cod_dip \n"
                    + " AND estudiante.cod_est=matricula.cod_est \n"
                    + " AND matricula.cod_mat=calificacion_1.cod_mat\n"
                    + " AND matricula.cod_mat=calificacion_2.cod_mat\n"
                    + " AND matricula.cod_mat=calificacion_3.cod_mat\n"
                    + " AND matricula.cod_mat=calificacion_4.cod_mat ";

            String codigo_matri = "";
            float cal1 = 0;
            float cal2 = 0;
            float cal3 = 0;
            float cal4 = 0;

            int falta1 = 0;
            int falta2 = 0;
            int falta3 = 0;
            int falta4 = 0;

            estado = cn.createStatement();
            ResultSet resultado = estado.executeQuery(consultaBD);

            while (resultado.next()) {
                codigo_matri = resultado.getString(1);
                cal1 = resultado.getFloat(2);
                falta1 = resultado.getInt(3);
                cal2 = resultado.getFloat(4);
                falta2 = resultado.getInt(5);
                cal3 = resultado.getFloat(6);
                falta3 = resultado.getInt(7);
                cal4 = resultado.getFloat(8);
                falta4 = resultado.getInt(9);
                
               // JOptionPane.showMessageDialog(null, codigo_matri+" "+cal1+" "+falta1+" "+cal2+" "+falta2+" "+cal3+" "+falta3+" "+cal4+" "+falta4);
              
               try {
                   float s1=((cal1*5)/20);
                    float s2=((cal2*5)/20);
                     float s3=((cal3*5)/20);
                      float s4=((cal4*5)/20);
                      float stotal=s1+s2+s3+s4;
                      int ftotal=falta1+falta2+falta3+ falta4;
                      String ponderado="";
                      if (stotal>=15 && ftotal<4){
                          ponderado="APROBADO";
                           try {
                            PreparedStatement psttt = cn.prepareStatement("UPDATE `examen_gracia` SET `indicador`=? WHERE `cod_mat`='" + codigo_matri + "'");

                       psttt.setInt(1,0) ;
        
                          psttt.executeUpdate();  
                          } catch (SQLException ex) {
                           alerta("Error", "NO EXISTEN REGISTROS AUN " + ex, "/Img_alertas/Error_100px.png");
          
                          }
                          
                          
                          
                      }
                      if (stotal>=14 && stotal <=14.99){
                          ponderado="EX.GRACIA";
                          try {
                            PreparedStatement pstt = cn.prepareStatement("UPDATE `examen_gracia` SET `indicador`=? WHERE `cod_mat`='" + codigo_matri + "'");

                       pstt.setInt(1,1) ;
        
                          pstt.executeUpdate();  
                          } catch (SQLException ex) {
                           alerta("Error", "NO EXISTEN REGISTROS AUN " + ex, "/Img_alertas/Error_100px.png");
          
                          }
                          
            
            //alerta("Notificación", "Datos se actualizaron exitosamente ", "/Img_alertas/satisfactoriamente_100px.png");

        
                          
                          
                          
                          
                          
                          
                      }
                      if (stotal<14){
                          ponderado="REPROBADO";
                      }
                      if (ftotal>=4){
                          ponderado="REPROBADO.FALTAS";
                      }
                      

            PreparedStatement pst = cn.prepareStatement("UPDATE `ponderados` SET `valor_nota1`=?,`valor_nota2`=?,`valor_nota3`=?,`valor_nota4`=?,`Suma_notas`=?,`Total_Faltas`=?,`equivalencia`=? WHERE `cod_mat`='" + codigo_matri + "'");

            pst.setFloat(1,s1) ;
            pst.setFloat(2, s2);
            pst.setFloat(3, s3);
            pst.setFloat(4, s4);
            pst.setFloat(5, stotal);
            pst.setInt(6, ftotal);
            pst.setString(7,ponderado );
            

            pst.executeUpdate();
            //alerta("Notificación", "Datos se actualizaron exitosamente ", "/Img_alertas/satisfactoriamente_100px.png");

        } catch (SQLException e) {
            // JOptionPane.showMessageDialog(null, "ERROR AL GUARDAR LOS DATOS" + e.getMessage());
            
            alerta("Error", "NO EXISTEN REGISTROS AUN " + e, "/Img_alertas/Error_100px.png");
       
        }
               
               
               
               
               
               
               
               
               
               
               
            }

//            try {
//
//                JOptionPane.showMessageDialog(null, consultaBD);
//                javax.swing.JTable Tabla = this.Tabla_Reporte_calificaciones;
//                // Enviamos los parametros para la consulta de la tabla
//                //  conexion    consulta de la base de datos y el nombre de la tabla
//                String cabesera[] = {"Matrícula", "Código del estudiante", "Apellido ", "Nombre", "Nota 1", "Faltas", "Nota 2", "Faltas", "Nota 3", "Faltas", "Nota 4", "Faltas"};
//                cone1.GetTabla_Sincabeseras_sql_bd(cn, consultaBD, Tabla, cabesera);
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(null, e);
//            }

        } catch (SQLException ex) {
            Logger.getLogger(Reporte_califi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSTableMetro Tabla_Reporte_calificaciones;
    private rojerusan.RSButtonMetro btn_buscar;
    private rojerusan.RSButtonMetro btn_refrescar;
    private rojerusan.RSButtonMetro btn_refrescar1;
    private rojerusan.RSButtonMetro btn_reportes;
    private rojerusan.RSComboMetro cbox_Horarios;
    private rojerusan.RSComboMetro cbox_buscar;
    private rojerusan.RSComboMetro cbox_diplomados;
    private rojerusan.RSComboMetro cbox_periodo_aca;
    private javax.swing.JScrollPane docente_menu;
    private javax.swing.JScrollPane docente_menu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private rojerusan.RSMetroTextPlaceHolder txt_buscar;
    public javax.swing.JLabel txt_identificativo;
    // End of variables declaration//GEN-END:variables
}
